{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata": {
    "name": "restify-seed"
  },
  "labels": {
    "template": "nodejs"
  },
  "objects": [
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "labels": {
          "app": "${NAME}",
          "runtime": "nodejs",
          "framework": "restify"
        }
      },
      "spec": {
        "ports": [
          {
            "name": "rest-service",
            "port": 8080,
            "targetPort": 8080
          }
        ],
        "selector": {
          "app": "${NAME}",
          "runtime": "nodejs",
          "framework": "restify"
        }
      }
    },
    {
      "kind": "Route",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "labels": {
          "app": "${NAME}",
          "runtime": "nodejs",
          "framework": "restify"
        }
      },
      "spec": {
        "host": "${APPLICATION_DOMAIN}",
        "to": {
          "kind": "Service",
          "name": "${NAME}"
        }
      }
    },
    {
      "kind": "ImageStream",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "labels": {
          "app": "${NAME}",
          "runtime": "nodejs",
          "framework": "restify"
        }
      }
    },
    {
      "kind": "BuildConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "template.alpha.openshift.io/wait-for-ready": "true"
        },
        "labels": {
          "app": "${NAME}",
          "runtime": "nodejs",
          "framework": "restify"
        }
      },
      "spec": {
        "source": {
          "type": "Git",
          "git": {
            "uri": "${SOURCE_REPOSITORY_URL}",
            "ref": "${SOURCE_REPOSITORY_REF}"
          },
          "contextDir": "${CONTEXT_DIR}"
        },
        "strategy": {
          "type": "Source",
          "sourceStrategy": {
            "from": {
              "kind": "ImageStreamTag",
              "namespace": "${NAMESPACE}",
              "name": "nodejs:${NODEJS_VERSION}"
            },
            "env":  [
              {
                "name": "NPM_MIRROR",
                "value": "${NPM_MIRROR}"
              }
            ]
          }
        },
        "output": {
          "to": {
            "kind": "ImageStreamTag",
            "name": "${NAME}:latest"
          }
        },
        "postCommit": {
          "script": "npm test"
        }
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "template.alpha.openshift.io/wait-for-ready": "true"
        },
        "labels": {
          "app": "${NAME}",
          "runtime": "nodejs",
          "framework": "restify"
        }
      },
      "spec": {
        "strategy": {
          "type": "Rolling"
        },
        "triggers": [
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "${NAME}"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "name": "${NAME}:latest"
              }
            }
          },
          {
            "type": "ConfigChange"
          }
        ],
        "replicas": 1,
        "selector": {
          "app": "${NAME}",
          "runtime": "nodejs",
          "framework": "restify"
        },
        "template": {
          "metadata": {
            "name": "${NAME}",
            "labels": {
              "app": "${NAME}",
              "runtime": "nodejs",
              "framework": "restify"
            }
          },
          "spec": {
            "containers": [
              {
                "name": "${NAME}",
                "image": " ",
                "ports": [
                  {
                    "containerPort": 8080,
                    "name": "rest-service"
                  }
                ],
                "readinessProbe": {
                  "timeoutSeconds": 3,
                  "initialDelaySeconds": 3,
                  "httpGet": {
                    "path": "/health",
                    "port": 8080
                  }
                },
                "livenessProbe": {
                  "timeoutSeconds": 3,
                  "initialDelaySeconds": 30,
                  "httpGet": {
                    "path": "/health",
                    "port": 8080
                  }
                },
                "resources": {
                  "limits": {
                    "cpu": "${CPU_LIMIT}",
                    "memory": "${MEMORY_LIMIT}"
                  },
                  "requests": {
                    "cpu": "${CPU_REQUEST}",
                    "memory": "${MEMORY_REQUEST}"
                  }
                },
                "env": [{
                  "name": "APP_NAME",
                  "value": "${NAME}"
                }, {
                  "name": "LOG_LEVEL",
                  "value": "${LOG_LEVEL}"
                }, {
                  "name": "AUDIT_LOG_ENABLED",
                  "value": "false"
                }, {
                  "name": "NODE_ENV",
                  "value": "production"
                }]
              }
            ]
          }
        }
      }
    }
  ],
  "parameters": [
    {
      "name": "NAME",
      "displayName": "Name",
      "description": "The name assigned to all of the frontend objects defined in this template.",
      "required": true,
      "value": "restify-seed"
    },
    {
      "name": "NAMESPACE",
      "displayName": "Namespace",
      "description": "The OpenShift Namespace where the ImageStream resides.",
      "required": true,
      "value": "openshift"
    },
    {
      "name": "NODEJS_VERSION",
      "displayName": "Version of NodeJS Image",
      "description": "Version of NodeJS image to be used (6, 8, or latest).",
      "value": "8",
      "required": true
    },
    {
      "name": "MEMORY_LIMIT",
      "displayName": "Memory Limit",
      "description": "Maximum amount of memory the container can use.",
      "required": true,
      "value": "512Mi"
    },
    {
      "name": "MEMORY_REQUEST",
      "displayName": "Memory Requested",
      "description": "Minimal amount of memory that the container needs.",
      "required": true,
      "value": "100Mi"
    },
    {
      "name": "CPU_LIMIT",
      "displayName": "CPU Limit",
      "description": "Maximum amount of cpu the container can use.",
      "required": true,
      "value": "200m"
    },
    {
      "name": "CPU_REQUEST",
      "displayName": "CPU Requested",
      "description": "Minimal amount of cpu that the container needs.",
      "required": true,
      "value": "50m"
    },
    {
      "name": "SOURCE_REPOSITORY_URL",
      "displayName": "Git Repository URL",
      "description": "The URL of the repository with your application source code.",
      "required": true,
      "value": "https://github.com/caiomedeirospinto/restify-seed"
    },
    {
      "name": "SOURCE_REPOSITORY_REF",
      "displayName": "Git Reference",
      "description": "Set this to a branch name, tag or other ref of your repository if you are not using the default branch."
    },
    {
      "name": "CONTEXT_DIR",
      "displayName": "Context Directory",
      "description": "Set this to the relative path to your project if it is not in the root of your repository."
    },
    {
      "name": "APPLICATION_DOMAIN",
      "displayName": "Application Hostname",
      "description": "The exposed hostname that will route to the Node.js service, if left blank a value will be defaulted.",
      "value": ""
    },
    {
      "name": "GITHUB_WEBHOOK_SECRET",
      "displayName": "GitHub Webhook Secret",
      "description": "Github trigger secret.  A difficult to guess string encoded as part of the webhook URL.  Not encrypted.",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{40}"
    },
    {
      "name": "GENERIC_WEBHOOK_SECRET",
      "displayName": "Generic Webhook Secret",
      "description": "A secret string used to configure the Generic webhook.",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{40}"
    },
    {
      "name": "NPM_MIRROR",
      "displayName": "Custom NPM Mirror URL",
      "description": "The custom NPM mirror URL",
      "value": ""
    },
    {
      "name": "LOG_LEVEL",
      "displayName": "Level of log that the app will use",
      "description": "Level of log that the app will use",
      "value": "info"
    }
  ]
}
